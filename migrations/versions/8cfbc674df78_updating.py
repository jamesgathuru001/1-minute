"""updating

Revision ID: 8cfbc674df78
Revises: b6efd3dd63a9
Create Date: 2019-06-04 16:39:51.483117

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8cfbc674df78'
down_revision = 'b6efd3dd63a9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('downvotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('downvote', sa.Integer(), nullable=True),
    sa.Column('pitch_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pitch_id'], ['pitches.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('upvotes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('upvote', sa.Integer(), nullable=True),
    sa.Column('pitch_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pitch_id'], ['pitches.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('roles')
    op.drop_table('likes')
    op.drop_table('dislikes')
    op.add_column('comments', sa.Column('comment', sa.String(), nullable=True))
    op.add_column('comments', sa.Column('posted_c', sa.DateTime(), nullable=True))
    op.add_column('comments', sa.Column('user_c', sa.Integer(), nullable=False))
    op.alter_column('comments', 'pitch_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('comments_user_id_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'users', ['user_c'], ['id'])
    op.drop_column('comments', 'comment_content')
    op.drop_column('comments', 'user_id')
    op.add_column('pitches', sa.Column('description', sa.String(), nullable=True))
    op.add_column('pitches', sa.Column('posted_p', sa.DateTime(), nullable=True))
    op.add_column('pitches', sa.Column('user_p', sa.Integer(), nullable=False))
    op.alter_column('pitches', 'category',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint('pitches_writer_fkey', 'pitches', type_='foreignkey')
    op.create_foreign_key(None, 'pitches', 'users', ['user_p'], ['id'])
    op.drop_column('pitches', 'body')
    op.drop_column('pitches', 'writer')
    op.drop_column('pitches', 'date')
    op.drop_index('ix_users_email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_constraint('users_role_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'role_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_role_id_fkey', 'users', 'roles', ['role_id'], ['id'])
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.add_column('pitches', sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('pitches', sa.Column('writer', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('pitches', sa.Column('body', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'pitches', type_='foreignkey')
    op.create_foreign_key('pitches_writer_fkey', 'pitches', 'users', ['writer'], ['id'])
    op.alter_column('pitches', 'category',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('pitches', 'user_p')
    op.drop_column('pitches', 'posted_p')
    op.drop_column('pitches', 'description')
    op.add_column('comments', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('comments', sa.Column('comment_content', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_user_id_fkey', 'comments', 'users', ['user_id'], ['id'])
    op.alter_column('comments', 'pitch_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('comments', 'user_c')
    op.drop_column('comments', 'posted_c')
    op.drop_column('comments', 'comment')
    op.create_table('dislikes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('dislike', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pitch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pitch_id'], ['pitches.id'], name='dislikes_pitch_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='dislikes_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='dislikes_pkey')
    )
    op.create_table('likes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('like', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pitch_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pitch_id'], ['pitches.id'], name='likes_pitch_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='likes_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='likes_pkey')
    )
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='roles_pkey')
    )
    op.drop_table('upvotes')
    op.drop_table('downvotes')
    # ### end Alembic commands ###
